#!/bin/sh

set -e

# empty message of the day.
echo -n > /etc/motd

# remove some unused packages
DEBIAN_FRONTEND=noninteractive apt-get purge -y laptop-detect tasksel emacsen-common ienglish-common ispell

# install some additional packages
DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends curl git gpg isolinux mc openssh-server sudo wget xorriso

# members of `sudo` group are not asked for password.
sed -i 's/^%sudo\tALL=(ALL:ALL) ALL/%sudo\tALL=(ALL:ALL) NOPASSWD:ALL/' /etc/sudoers

# new users should be put into the "users" group
sed -i 's/^USERGROUPS=yes/USERGROUPS=no/' /etc/adduser.conf

# fix the time server configuration
sed -i 's/^#NTP=/NTP=us.pool.ntp.org/' /etc/systemd/timesyncd.conf

# unpack the postinstall tar file
tar -z -x -C /tmp -f /tmp/postinstall.tar.gz

echo "deb http://ftp.debian.org/debian bookworm main contrib" >> /etc/apt/sources.list.new
echo "deb http://ftp.debian.org/debian bookworm-updates main contrib" >> /etc/apt/sources.list.new

# security updates
echo "deb http://security.debian.org/debian-security bookworm-security main contrib" >> /etc/apt/sources.list.new

## Add Kubernetes 3.11
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
# This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

## Add Proxmox
wget https://enterprise.proxmox.com/debian/proxmox-release-bookworm.gpg -O /etc/apt/trusted.gpg.d/proxmox-release-bookworm.gpg

# Proxmox VE pve-no-subscription repository provided by proxmox.com,
# NOT recommended for production use
echo "deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription" >> /etc/apt/sources.list.d/pve-install-repo.list

# etc Fixes
cp /tmp/postinstall.d/etc/systemd/logind.conf /etc/systemd
cp /tmp/postinstall.d/.gitconfig /root/.gitconfig

cp /tmp/postinstall.d/apt.kube /home/drew
cp /tmp/postinstall.d/apt.proxmox /home/drew

# install global things and root things
mkdir -m700 -p /root/.ssh
cp /tmp/postinstall.d/resolv.conf /etc/resolv.conf
cp /tmp/postinstall.d/apt.conf.d/50unattended-upgrades /etc/apt/apt.conf.d/50unattended-upgrades
cp /tmp/postinstall.d/apt.conf.d/20auto-upgrades /etc/apt/apt.conf.d/20auto-upgrades
cp /tmp/postinstall.d/vimrc /root/.vimrc
cp /tmp/postinstall.d/bash_login /root/.bash_login

git clone https://github.com/AdnanHodzic/displaylink-debian.git /home/drew/DisplayLink-Debian
git clone https://github.com/netbootxyz/netboot.xyz

# add our sudoers file for drew
cp /tmp/postinstall.d/sudoers /etc/sudoers.d/drew
chmod 400 /etc/sudoers.d/drew

# install ssh keys and other things for drew user
mkdir -m700 -p /home/drew/.ssh

cp /tmp/postinstall.d/Keys/authorized_keys /home/drew/.ssh/authorized_keys

cp /tmp/postinstall.d/.gitconfig /home/drew/.gitconfig
cp /tmp/postinstall.d/vimrc /home/drew/.vimrc
cp /tmp/postinstall.d/bash_login /home/drew/.bash_login

# fix permissions on root home directory
chmod 700 /root
chmod 600 /root/.bash_login

# fix permissions on drew home directory
chown -R drew:drew /home/drew
chmod 700 /home/drew
chmod 600 /home/drew/.bash_login /home/drew/.ssh/authorized_keys

rm /etc/hostname

if [[ `hostname` == 'yoda' ]];
then
	cp postinstall.d/etc/network/interface.yoda /etc/network/interface
	cp postinstall.d/etc/network/vmbr0.yoda /etc/network/interfaces.d/vmbr0
elif [[ `hostname` == 'finally' ]];
then
	cp postinstall.d/etc/network/interface.finally /etc/network/interface
	cp postinstall.d/etc/network/vmbr0.finally /etc/network/interfaces.d/vmbr0
fi

